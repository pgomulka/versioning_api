/*
 * Elasticsearch rest api
 * draft elasticsearch
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;



import java.util.Objects;
import java.util.Arrays;



import com.google.gson.TypeAdapter;

import com.google.gson.annotations.JsonAdapter;

import com.google.gson.annotations.SerializedName;

import com.google.gson.stream.JsonReader;

import com.google.gson.stream.JsonWriter;

import io.swagger.annotations.ApiModel;

import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;

import java.util.HashMap;

import java.util.List;

import java.util.Map;










/**
 * 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-07-22T14:23:04.985497+02:00[Europe/Warsaw]")
public class ClusterSettingsRequest {

  
    
  
  
  
  public static final String SERIALIZED_NAME_PERSISTENT = "persistent";
  @SerializedName(SERIALIZED_NAME_PERSISTENT)
  
  private Map<String, String> persistent = new HashMap<String, String>();

  
    
  
  
  
  public static final String SERIALIZED_NAME_TRANSIENT = "transient";
  @SerializedName(SERIALIZED_NAME_TRANSIENT)
  
  private Map<String, String> _transient = new HashMap<String, String>();

  
  
  
  

 public static final ConstructingObjectParser<ClusterSettingsRequest, Void> PARSER = new ConstructingObjectParser<>(ClusterSettingsRequest.class.getName(),
        a -> new ClusterSettingsRequest 

	(Map&lt;String, String&gt; a[0]
 
	(Map&lt;String, String&gt; a[1]
 
        ));

    static {

	
	builder.field("persistent", persistent);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(persistent));
	 
	 
 
	
	builder.field("_transient", _transient);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(_transient));
	 
	 
 
	{
    }

  
  
  
  
  
  public ClusterSettingsRequest persistent(Map<String, String> persistent) {
    this.persistent = persistent;
    return this;
  }
  
  

  public ClusterSettingsRequest putPersistentItem(String key, String persistentItem) {
    
    if (this.persistent == null) {
      this.persistent = new HashMap<String, String>();
    }
    
    this.persistent.put(key, persistentItem);
    return this;
  }
  

  
   /**
  
  
  
  
   * @return persistent
  **/
  @ApiModelProperty(value = "")

  public Map<String, String> getPersistent() {
    return persistent;
  }
  

  public void setPersistent(Map<String, String> persistent) {
    this.persistent = persistent;
  }
  

  
  
  public ClusterSettingsRequest _transient(Map<String, String> _transient) {
    this._transient = _transient;
    return this;
  }
  
  

  public ClusterSettingsRequest putTransientItem(String key, String _transientItem) {
    
    if (this._transient == null) {
      this._transient = new HashMap<String, String>();
    }
    
    this._transient.put(key, _transientItem);
    return this;
  }
  

  
   /**
  
  
  
  
   * @return _transient
  **/
  @ApiModelProperty(value = "")

  public Map<String, String> getTransient() {
    return _transient;
  }
  

  public void setTransient(Map<String, String> _transient) {
    this._transient = _transient;
  }
  

  

 public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {
	 builder.startObject();
 
	
	builder.field("persistent", persistent);
	 
	 
 
	
	builder.field("_transient", _transient);
	 
	 
 
	 builder.endObject();
	 return builder;
 }


  @Override
  public boolean equals(java.lang.Object o) {
  
  
  }

  @Override
  public int hashCode() {
  
  
  }




  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClusterSettingsRequest {\n");
    
    
    sb.append("    persistent: ").append(toIndentedString(persistent)).append("\n");
    
    sb.append("    _transient: ").append(toIndentedString(_transient)).append("\n");
    
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


}



