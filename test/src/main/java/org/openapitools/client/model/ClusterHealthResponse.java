/*
 * Elasticsearch rest api
 * draft elasticsearch
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;



import java.util.Objects;
import java.util.Arrays;



import com.google.gson.TypeAdapter;

import com.google.gson.annotations.JsonAdapter;

import com.google.gson.annotations.SerializedName;

import com.google.gson.stream.JsonReader;

import com.google.gson.stream.JsonWriter;

import io.swagger.annotations.ApiModel;

import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;










/**
 * 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-07-22T13:17:29.994758+02:00[Europe/Warsaw]")
public class ClusterHealthResponse {

  
    
  
  
  
  public static final String SERIALIZED_NAME_EPOCH = "epoch";
  @SerializedName(SERIALIZED_NAME_EPOCH)
  
  private String epoch;

  
    
  
  
  
  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  
  private String timestamp;

  
    
  
  
  
  public static final String SERIALIZED_NAME_CLUSTER = "cluster";
  @SerializedName(SERIALIZED_NAME_CLUSTER)
  
  private String cluster;

  
    
  
  
  
  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  
  private String status;

  
    
  
  
  
  public static final String SERIALIZED_NAME_NODE_TOTAL = "node.total";
  @SerializedName(SERIALIZED_NAME_NODE_TOTAL)
  
  private String nodeTotal;

  
    
  
  
  
  public static final String SERIALIZED_NAME_NODE_DATA = "node.data";
  @SerializedName(SERIALIZED_NAME_NODE_DATA)
  
  private String nodeData;

  
    
  
  
  
  public static final String SERIALIZED_NAME_SHARDS = "shards";
  @SerializedName(SERIALIZED_NAME_SHARDS)
  
  private String shards;

  
    
  
  
  
  public static final String SERIALIZED_NAME_PRI = "pri";
  @SerializedName(SERIALIZED_NAME_PRI)
  
  private String pri;

  
    
  
  
  
  public static final String SERIALIZED_NAME_RELO = "relo";
  @SerializedName(SERIALIZED_NAME_RELO)
  
  private String relo;

  
    
  
  
  
  public static final String SERIALIZED_NAME_INIT = "init";
  @SerializedName(SERIALIZED_NAME_INIT)
  
  private String init;

  
    
  
  
  
  public static final String SERIALIZED_NAME_UNASSIGN = "unassign";
  @SerializedName(SERIALIZED_NAME_UNASSIGN)
  
  private String unassign;

  
    
  
  
  
  public static final String SERIALIZED_NAME_PENDING_TASKS = "pending_tasks";
  @SerializedName(SERIALIZED_NAME_PENDING_TASKS)
  
  private String pendingTasks;

  
    
  
  
  
  public static final String SERIALIZED_NAME_MAX_TASKS_WAIT_TIME = "max_tasks_wait_time";
  @SerializedName(SERIALIZED_NAME_MAX_TASKS_WAIT_TIME)
  
  private String maxTasksWaitTime;

  
    
  
  
  
  public static final String SERIALIZED_NAME_ACTIVE_SHARDS_PERCENT = "active_shards_percent";
  @SerializedName(SERIALIZED_NAME_ACTIVE_SHARDS_PERCENT)
  
  private String activeShardsPercent;

  
  
  
  

 public static final ConstructingObjectParser<ClusterHealthResponse, Void> PARSER = new ConstructingObjectParser<>(ClusterHealthResponse.class.getName(),
        a -> new ClusterHealthResponse 

	(String a[0]
 
	(String a[1]
 
	(String a[2]
 
	(String a[3]
 
	(String a[4]
 
	(String a[5]
 
	(String a[6]
 
	(String a[7]
 
	(String a[8]
 
	(String a[9]
 
	(String a[10]
 
	(String a[11]
 
	(String a[12]
 
	(String a[13]
 
        ));

    static {

	
	builder.field("epoch", epoch);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(epoch));
	 
	 
 
	
	builder.field("timestamp", timestamp);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(timestamp));
	 
	 
 
	
	builder.field("cluster", cluster);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(cluster));
	 
	 
 
	
	builder.field("status", status);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(status));
	 
	 
 
	
	builder.field("nodeTotal", nodeTotal);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(nodeTotal));
	 
	 
 
	
	builder.field("nodeData", nodeData);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(nodeData));
	 
	 
 
	
	builder.field("shards", shards);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(shards));
	 
	 
 
	
	builder.field("pri", pri);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(pri));
	 
	 
 
	
	builder.field("relo", relo);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(relo));
	 
	 
 
	
	builder.field("init", init);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(init));
	 
	 
 
	
	builder.field("unassign", unassign);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(unassign));
	 
	 
 
	
	builder.field("pendingTasks", pendingTasks);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(pendingTasks));
	 
	 
 
	
	builder.field("maxTasksWaitTime", maxTasksWaitTime);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(maxTasksWaitTime));
	 
	 
 
	
	builder.field("activeShardsPercent", activeShardsPercent);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(activeShardsPercent));
	 
	 
 
	{
    }

  
  
  
  
  
  public ClusterHealthResponse epoch(String epoch) {
    this.epoch = epoch;
    return this;
  }
  
  

  
   /**
  
  
  
  
   * @return epoch
  **/
  @ApiModelProperty(value = "")

  public String getEpoch() {
    return epoch;
  }
  

  public void setEpoch(String epoch) {
    this.epoch = epoch;
  }
  

  
  
  public ClusterHealthResponse timestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }
  
  

  
   /**
  
  
  
  
   * @return timestamp
  **/
  @ApiModelProperty(value = "")

  public String getTimestamp() {
    return timestamp;
  }
  

  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }
  

  
  
  public ClusterHealthResponse cluster(String cluster) {
    this.cluster = cluster;
    return this;
  }
  
  

  
   /**
  
  
  
  
   * @return cluster
  **/
  @ApiModelProperty(value = "")

  public String getCluster() {
    return cluster;
  }
  

  public void setCluster(String cluster) {
    this.cluster = cluster;
  }
  

  
  
  public ClusterHealthResponse status(String status) {
    this.status = status;
    return this;
  }
  
  

  
   /**
  
  
  
  
   * @return status
  **/
  @ApiModelProperty(value = "")

  public String getStatus() {
    return status;
  }
  

  public void setStatus(String status) {
    this.status = status;
  }
  

  
  
  public ClusterHealthResponse nodeTotal(String nodeTotal) {
    this.nodeTotal = nodeTotal;
    return this;
  }
  
  

  
   /**
  
  
  
  
   * @return nodeTotal
  **/
  @ApiModelProperty(value = "")

  public String getNodeTotal() {
    return nodeTotal;
  }
  

  public void setNodeTotal(String nodeTotal) {
    this.nodeTotal = nodeTotal;
  }
  

  
  
  public ClusterHealthResponse nodeData(String nodeData) {
    this.nodeData = nodeData;
    return this;
  }
  
  

  
   /**
  
  
  
  
   * @return nodeData
  **/
  @ApiModelProperty(value = "")

  public String getNodeData() {
    return nodeData;
  }
  

  public void setNodeData(String nodeData) {
    this.nodeData = nodeData;
  }
  

  
  
  public ClusterHealthResponse shards(String shards) {
    this.shards = shards;
    return this;
  }
  
  

  
   /**
  
  
  
  
   * @return shards
  **/
  @ApiModelProperty(value = "")

  public String getShards() {
    return shards;
  }
  

  public void setShards(String shards) {
    this.shards = shards;
  }
  

  
  
  public ClusterHealthResponse pri(String pri) {
    this.pri = pri;
    return this;
  }
  
  

  
   /**
  
  
  
  
   * @return pri
  **/
  @ApiModelProperty(value = "")

  public String getPri() {
    return pri;
  }
  

  public void setPri(String pri) {
    this.pri = pri;
  }
  

  
  
  public ClusterHealthResponse relo(String relo) {
    this.relo = relo;
    return this;
  }
  
  

  
   /**
  
  
  
  
   * @return relo
  **/
  @ApiModelProperty(value = "")

  public String getRelo() {
    return relo;
  }
  

  public void setRelo(String relo) {
    this.relo = relo;
  }
  

  
  
  public ClusterHealthResponse init(String init) {
    this.init = init;
    return this;
  }
  
  

  
   /**
  
  
  
  
   * @return init
  **/
  @ApiModelProperty(value = "")

  public String getInit() {
    return init;
  }
  

  public void setInit(String init) {
    this.init = init;
  }
  

  
  
  public ClusterHealthResponse unassign(String unassign) {
    this.unassign = unassign;
    return this;
  }
  
  

  
   /**
  
  
  
  
   * @return unassign
  **/
  @ApiModelProperty(value = "")

  public String getUnassign() {
    return unassign;
  }
  

  public void setUnassign(String unassign) {
    this.unassign = unassign;
  }
  

  
  
  public ClusterHealthResponse pendingTasks(String pendingTasks) {
    this.pendingTasks = pendingTasks;
    return this;
  }
  
  

  
   /**
  
  
  
  
   * @return pendingTasks
  **/
  @ApiModelProperty(value = "")

  public String getPendingTasks() {
    return pendingTasks;
  }
  

  public void setPendingTasks(String pendingTasks) {
    this.pendingTasks = pendingTasks;
  }
  

  
  
  public ClusterHealthResponse maxTasksWaitTime(String maxTasksWaitTime) {
    this.maxTasksWaitTime = maxTasksWaitTime;
    return this;
  }
  
  

  
   /**
  
  
  
  
   * @return maxTasksWaitTime
  **/
  @ApiModelProperty(value = "")

  public String getMaxTasksWaitTime() {
    return maxTasksWaitTime;
  }
  

  public void setMaxTasksWaitTime(String maxTasksWaitTime) {
    this.maxTasksWaitTime = maxTasksWaitTime;
  }
  

  
  
  public ClusterHealthResponse activeShardsPercent(String activeShardsPercent) {
    this.activeShardsPercent = activeShardsPercent;
    return this;
  }
  
  

  
   /**
  
  
  
  
   * @return activeShardsPercent
  **/
  @ApiModelProperty(value = "")

  public String getActiveShardsPercent() {
    return activeShardsPercent;
  }
  

  public void setActiveShardsPercent(String activeShardsPercent) {
    this.activeShardsPercent = activeShardsPercent;
  }
  

  

 public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {
	 builder.startObject();
 
	
	builder.field("epoch", epoch);
	 
	 
 
	
	builder.field("timestamp", timestamp);
	 
	 
 
	
	builder.field("cluster", cluster);
	 
	 
 
	
	builder.field("status", status);
	 
	 
 
	
	builder.field("nodeTotal", nodeTotal);
	 
	 
 
	
	builder.field("nodeData", nodeData);
	 
	 
 
	
	builder.field("shards", shards);
	 
	 
 
	
	builder.field("pri", pri);
	 
	 
 
	
	builder.field("relo", relo);
	 
	 
 
	
	builder.field("init", init);
	 
	 
 
	
	builder.field("unassign", unassign);
	 
	 
 
	
	builder.field("pendingTasks", pendingTasks);
	 
	 
 
	
	builder.field("maxTasksWaitTime", maxTasksWaitTime);
	 
	 
 
	
	builder.field("activeShardsPercent", activeShardsPercent);
	 
	 
 
	 builder.endObject();
	 return builder;
 }


  @Override
  public boolean equals(java.lang.Object o) {
  
  
  }

  @Override
  public int hashCode() {
  
  
  }




  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClusterHealthResponse {\n");
    
    
    sb.append("    epoch: ").append(toIndentedString(epoch)).append("\n");
    
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    
    sb.append("    nodeTotal: ").append(toIndentedString(nodeTotal)).append("\n");
    
    sb.append("    nodeData: ").append(toIndentedString(nodeData)).append("\n");
    
    sb.append("    shards: ").append(toIndentedString(shards)).append("\n");
    
    sb.append("    pri: ").append(toIndentedString(pri)).append("\n");
    
    sb.append("    relo: ").append(toIndentedString(relo)).append("\n");
    
    sb.append("    init: ").append(toIndentedString(init)).append("\n");
    
    sb.append("    unassign: ").append(toIndentedString(unassign)).append("\n");
    
    sb.append("    pendingTasks: ").append(toIndentedString(pendingTasks)).append("\n");
    
    sb.append("    maxTasksWaitTime: ").append(toIndentedString(maxTasksWaitTime)).append("\n");
    
    sb.append("    activeShardsPercent: ").append(toIndentedString(activeShardsPercent)).append("\n");
    
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


}



