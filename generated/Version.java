/*
 * Elasticsearch rest api
 * draft elasticsearch
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;



import java.util.Objects;
import java.util.Arrays;



import com.google.gson.TypeAdapter;

import com.google.gson.annotations.JsonAdapter;

import com.google.gson.annotations.SerializedName;

import com.google.gson.stream.JsonReader;

import com.google.gson.stream.JsonWriter;

import io.swagger.annotations.ApiModel;

import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;










/**
 * 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-07-22T14:23:04.985497+02:00[Europe/Warsaw]")
public class Version {

  
    
  
  
  
  public static final String SERIALIZED_NAME_NUMBER = "number";
  @SerializedName(SERIALIZED_NAME_NUMBER)
  
  private String number;

  
    
  
  
  
  public static final String SERIALIZED_NAME_BUILD_FLAVOR = "build_flavor";
  @SerializedName(SERIALIZED_NAME_BUILD_FLAVOR)
  
  private String buildFlavor;

  
    
  
  
  
  public static final String SERIALIZED_NAME_BUILD_TYPE = "build_type";
  @SerializedName(SERIALIZED_NAME_BUILD_TYPE)
  
  private String buildType;

  
    
  
  
  
  public static final String SERIALIZED_NAME_BUILD_HASH = "build_hash";
  @SerializedName(SERIALIZED_NAME_BUILD_HASH)
  
  private String buildHash;

  
    
  
  
  
  public static final String SERIALIZED_NAME_BUILD_DATE = "build_date";
  @SerializedName(SERIALIZED_NAME_BUILD_DATE)
  
  private String buildDate;

  
    
  
  
  
  public static final String SERIALIZED_NAME_BUILD_SNAPSHOT = "build_snapshot";
  @SerializedName(SERIALIZED_NAME_BUILD_SNAPSHOT)
  
  private String buildSnapshot;

  
    
  
  
  
  public static final String SERIALIZED_NAME_LUCENE_VERSION = "lucene_version";
  @SerializedName(SERIALIZED_NAME_LUCENE_VERSION)
  
  private String luceneVersion;

  
    
  
  
  
  public static final String SERIALIZED_NAME_MINIMUM_WIRE_COMPATIBILITY_VERSION = "minimum_wire_compatibility_version";
  @SerializedName(SERIALIZED_NAME_MINIMUM_WIRE_COMPATIBILITY_VERSION)
  
  private String minimumWireCompatibilityVersion;

  
    
  
  
  
  public static final String SERIALIZED_NAME_MINIMUM_INDEX_COMPATIBILITY_VERSION = "minimum_index_compatibility_version";
  @SerializedName(SERIALIZED_NAME_MINIMUM_INDEX_COMPATIBILITY_VERSION)
  
  private String minimumIndexCompatibilityVersion;

  
  
  
  

 public static final ConstructingObjectParser<Version, Void> PARSER = new ConstructingObjectParser<>(Version.class.getName(),
        a -> new Version 

	(String a[0]
 
	(String a[1]
 
	(String a[2]
 
	(String a[3]
 
	(String a[4]
 
	(String a[5]
 
	(String a[6]
 
	(String a[7]
 
	(String a[8]
 
        ));

    static {

	
	builder.field("number", number);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(number));
	 
	 
 
	
	builder.field("buildFlavor", buildFlavor);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(buildFlavor));
	 
	 
 
	
	builder.field("buildType", buildType);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(buildType));
	 
	 
 
	
	builder.field("buildHash", buildHash);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(buildHash));
	 
	 
 
	
	builder.field("buildDate", buildDate);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(buildDate));
	 
	 
 
	
	builder.field("buildSnapshot", buildSnapshot);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(buildSnapshot));
	 
	 
 
	
	builder.field("luceneVersion", luceneVersion);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(luceneVersion));
	 
	 
 
	
	builder.field("minimumWireCompatibilityVersion", minimumWireCompatibilityVersion);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(minimumWireCompatibilityVersion));
	 
	 
 
	
	builder.field("minimumIndexCompatibilityVersion", minimumIndexCompatibilityVersion);
        PARSER.declareString(ConstructingObjectParser.constructorArg(), new ParseField(minimumIndexCompatibilityVersion));
	 
	 
 
	{
    }

  
  
  
  
  
  public Version number(String number) {
    this.number = number;
    return this;
  }
  
  

  
   /**
  
  
  
  
   * @return number
  **/
  @ApiModelProperty(value = "")

  public String getNumber() {
    return number;
  }
  

  public void setNumber(String number) {
    this.number = number;
  }
  

  
  
  public Version buildFlavor(String buildFlavor) {
    this.buildFlavor = buildFlavor;
    return this;
  }
  
  

  
   /**
  
  
  
  
   * @return buildFlavor
  **/
  @ApiModelProperty(value = "")

  public String getBuildFlavor() {
    return buildFlavor;
  }
  

  public void setBuildFlavor(String buildFlavor) {
    this.buildFlavor = buildFlavor;
  }
  

  
  
  public Version buildType(String buildType) {
    this.buildType = buildType;
    return this;
  }
  
  

  
   /**
  
  
  
  
   * @return buildType
  **/
  @ApiModelProperty(value = "")

  public String getBuildType() {
    return buildType;
  }
  

  public void setBuildType(String buildType) {
    this.buildType = buildType;
  }
  

  
  
  public Version buildHash(String buildHash) {
    this.buildHash = buildHash;
    return this;
  }
  
  

  
   /**
  
  
  
  
   * @return buildHash
  **/
  @ApiModelProperty(value = "")

  public String getBuildHash() {
    return buildHash;
  }
  

  public void setBuildHash(String buildHash) {
    this.buildHash = buildHash;
  }
  

  
  
  public Version buildDate(String buildDate) {
    this.buildDate = buildDate;
    return this;
  }
  
  

  
   /**
  
  
  
  
   * @return buildDate
  **/
  @ApiModelProperty(value = "")

  public String getBuildDate() {
    return buildDate;
  }
  

  public void setBuildDate(String buildDate) {
    this.buildDate = buildDate;
  }
  

  
  
  public Version buildSnapshot(String buildSnapshot) {
    this.buildSnapshot = buildSnapshot;
    return this;
  }
  
  

  
   /**
  
  
  
  
   * @return buildSnapshot
  **/
  @ApiModelProperty(value = "")

  public String getBuildSnapshot() {
    return buildSnapshot;
  }
  

  public void setBuildSnapshot(String buildSnapshot) {
    this.buildSnapshot = buildSnapshot;
  }
  

  
  
  public Version luceneVersion(String luceneVersion) {
    this.luceneVersion = luceneVersion;
    return this;
  }
  
  

  
   /**
  
  
  
  
   * @return luceneVersion
  **/
  @ApiModelProperty(value = "")

  public String getLuceneVersion() {
    return luceneVersion;
  }
  

  public void setLuceneVersion(String luceneVersion) {
    this.luceneVersion = luceneVersion;
  }
  

  
  
  public Version minimumWireCompatibilityVersion(String minimumWireCompatibilityVersion) {
    this.minimumWireCompatibilityVersion = minimumWireCompatibilityVersion;
    return this;
  }
  
  

  
   /**
  
  
  
  
   * @return minimumWireCompatibilityVersion
  **/
  @ApiModelProperty(value = "")

  public String getMinimumWireCompatibilityVersion() {
    return minimumWireCompatibilityVersion;
  }
  

  public void setMinimumWireCompatibilityVersion(String minimumWireCompatibilityVersion) {
    this.minimumWireCompatibilityVersion = minimumWireCompatibilityVersion;
  }
  

  
  
  public Version minimumIndexCompatibilityVersion(String minimumIndexCompatibilityVersion) {
    this.minimumIndexCompatibilityVersion = minimumIndexCompatibilityVersion;
    return this;
  }
  
  

  
   /**
  
  
  
  
   * @return minimumIndexCompatibilityVersion
  **/
  @ApiModelProperty(value = "")

  public String getMinimumIndexCompatibilityVersion() {
    return minimumIndexCompatibilityVersion;
  }
  

  public void setMinimumIndexCompatibilityVersion(String minimumIndexCompatibilityVersion) {
    this.minimumIndexCompatibilityVersion = minimumIndexCompatibilityVersion;
  }
  

  

 public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {
	 builder.startObject();
 
	
	builder.field("number", number);
	 
	 
 
	
	builder.field("buildFlavor", buildFlavor);
	 
	 
 
	
	builder.field("buildType", buildType);
	 
	 
 
	
	builder.field("buildHash", buildHash);
	 
	 
 
	
	builder.field("buildDate", buildDate);
	 
	 
 
	
	builder.field("buildSnapshot", buildSnapshot);
	 
	 
 
	
	builder.field("luceneVersion", luceneVersion);
	 
	 
 
	
	builder.field("minimumWireCompatibilityVersion", minimumWireCompatibilityVersion);
	 
	 
 
	
	builder.field("minimumIndexCompatibilityVersion", minimumIndexCompatibilityVersion);
	 
	 
 
	 builder.endObject();
	 return builder;
 }


  @Override
  public boolean equals(java.lang.Object o) {
  
  
  }

  @Override
  public int hashCode() {
  
  
  }




  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Version {\n");
    
    
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    
    sb.append("    buildFlavor: ").append(toIndentedString(buildFlavor)).append("\n");
    
    sb.append("    buildType: ").append(toIndentedString(buildType)).append("\n");
    
    sb.append("    buildHash: ").append(toIndentedString(buildHash)).append("\n");
    
    sb.append("    buildDate: ").append(toIndentedString(buildDate)).append("\n");
    
    sb.append("    buildSnapshot: ").append(toIndentedString(buildSnapshot)).append("\n");
    
    sb.append("    luceneVersion: ").append(toIndentedString(luceneVersion)).append("\n");
    
    sb.append("    minimumWireCompatibilityVersion: ").append(toIndentedString(minimumWireCompatibilityVersion)).append("\n");
    
    sb.append("    minimumIndexCompatibilityVersion: ").append(toIndentedString(minimumIndexCompatibilityVersion)).append("\n");
    
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


}



